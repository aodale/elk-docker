# source https://github.com/githubcdr/docker-elk
# author githubcdr

input {
    # beats {
    #     port => 5044
    # }
  file {
    path => [ "/tmp/agg.json" ]
    start_position => "beginning"
    tags => "forgerock"
    sincedb_clean_after => "5 seconds"
  }
}

filter {
    json {
        source => "message"
    }
    mutate {
        rename => { "_id" => "_frid" }
        remove_field => [ "command" ]
    }
    date {
        match => [ "timestamp", "ISO8601" ]
    }
    aggregate {
        push_map_as_event_on_timeout => true
        timeout_task_id_field => "transactionId"
        timeout => 10
        inactivity_timeout => 10
        task_id => "%{transactionId}"
        code => "
            map['transactionId'] = event.get('transactionId')
            if (event.get('eventName') == 'sync' or event.get('eventName') == 'recon' or event.get('eventName') == 'activity')
                map['eventName'] = event.get('eventName')
            else
                map['eventName'] = 'LOGIN'
                map['principal'] = event.get('principal')
            end
            map['child'] ||= []
            map['child'] << event.to_hash
            event.cancel()
            "
        timeout_code => "
            if (event.get('eventName') == 'LOGIN')
                event.set('last_node', event.get('child')[event.get('child').length-2])
            end
            "
    }
}

output {
#   elasticsearch {
#     hosts => ["192.168.122.1"]
#     index => "test-am-audit"
#   }
  stdout {}
}

