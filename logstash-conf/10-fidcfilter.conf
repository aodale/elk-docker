filter {
    json {
        source => "message"
    }
    mutate {
        rename => { "_id" => "_frid" }
        remove_field => [ "command", "message", "input", "agent", "ecs", "host" ]
    }
    date {
        match => [ "[payload][timestamp]", "ISO8601" ]
    }
    # aggregate {
    #     push_map_as_event_on_timeout => true
    #     timeout_task_id_field => "[payload][transactionId]"
    #     timeout => 10
    #     inactivity_timeout => 10
    #     task_id => "%{[payload][transactionId]}"
    #     code => "
    #         map['transactionId'] = event.get('[payload][transactionId]')
    #         map['eventName'] ||= event.get('[payload][eventName]')
    #         map['child'] ||= []
    #         map['child'].push(event.get('[payload]'))
    #         event.cancel()
    #     "
    #     timeout_code => "
    #         event.set('num_children', event.get('child').length)
    #         if (event.get('[eventName]') == 'AM-NODE-LOGIN-COMPLETED')
    #             event.set('last_node', event.get('child')[event.get('child').length-2])
    #             event.set('principal', event.get('[payload][principal]'))
    #         end
    #     "
    # }
}
